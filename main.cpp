


/*
 * Вариант No14.
БД – совокупность факультетов (вуз). Класс 1 – базовые факультеты, класс 2 – отраслевые факультеты.
 Каждый факультет имеет:
 название,
 НУК,
 кол-во кафедр
  Для каждого факультета указан список дисциплин,
сгруппированных по кафедрам, для каждой дисциплины – кол-во преподавателей, которые её ведут.
 Для отраслевого факультета также присутствует список названий дисциплин с кол-вом преподавателей,
сгруппированных по базовым организациям.
Функции (п. 4):
 Подсчёт кол-ва уникальных (по названию) дисциплин, преподаваемых на факультете (для отраслевых
факультетов – с учётом дисциплин базовых организаций).
 Поиск факультета внутри БД по названию.
Правила сортировки записей БД (п. 5.10):
 По названию факультета (по алфавиту).
 По числу кафедр (по убыванию).
Правила выборки записей из БД (п. 5.11):
 Факультеты, относящиеся к НУК name (name задаётся с клавиатуры).
 Факультеты, ведущие дисциплину name (name задаётся с клавиатуры).
 */
#include <iostream>
#include <filesystem>
#include "BD.h"
#include "REG.h"
#include "OTR.h"



int MasterStrCase() {
    std::string str;
    std::cout << std::endl <<  "--------------------------------------" << std::endl;
    std::cout << "Выберите действие" << std::endl;
    std::cout << "1-Вывести существующие БД" << std::endl;
    std::cout << "2-Открыть БД" << std::endl;
    std::cout << "3-Добавить БД" << std::endl;
    std::cout << "4-Переименовать БД" << std::endl;
    std::cout << "5-Удалить БД" << std::endl;
    std::cout << "0-Выход" << std::endl;
    std::cout << "--------------------------------------"<< std::endl;
    getline(std::cin, str);
    if (str == "1" || str == "вывести бд" || str == "вывести")
        return 1;
    if (str == "2" || str == "открыть бд" || str == "открыть")
        return 2;
    if (str == "3" || str == "добавить бд" || str == "добавить")
        return 3;
    if (str == "4" || str == "переименовать бд" || str == "переименовать")
        return 4;
    if (str == "5" || str == "удалить бд" || str == "удалить")
        return 5;
    if (str == "0" || str == "выход")
        return 0;
    return 7;
}

double sum(std::initializer_list<double>& list) {
    int s = 0;
    for (const auto& item : list) {
        s+= item;
    }
    return s;
}

int main() {

    BD BMSTU("BMSTU");
  //  ORG* p = new REG( ... );// статический
    Abst* p = new REG();
    std::ifstream my_stream;
    p->scan(my_stream);


    return 0;
}
